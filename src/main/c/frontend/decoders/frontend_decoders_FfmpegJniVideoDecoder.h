/*
 * Rubus is an application level protocol for video and audio streaming and
 * the client and server reference implementations.
 * Copyright (C) 2024-2025 Yegore Vlussove
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <https://www.gnu.org/licenses/>.
 */

/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
/* Header for class frontend_decoders_FfmpegJniVideoDecoder */

#ifndef _Included_frontend_decoders_FfmpegJniVideoDecoder
#define _Included_frontend_decoders_FfmpegJniVideoDecoder
#ifdef __cplusplus
extern "C" {
#endif
/*
 * Class:     frontend_decoders_FfmpegJniVideoDecoder
 * Method:    decodeFrames
 * Signature: (JI[BII)[Ljava/lang/Object;
 */
JNIEXPORT jobjectArray JNICALL Java_frontend_decoders_FfmpegJniVideoDecoder_decodeFrames
  (JNIEnv *, jobject, jlong, jint, jbyteArray, jint, jint);

/*
 * Class:     frontend_decoders_FfmpegJniVideoDecoder
 * Method:    frames
 * Signature: (JI)I
 */
JNIEXPORT jint JNICALL Java_frontend_decoders_FfmpegJniVideoDecoder_frames
  (JNIEnv *, jobject, jlong, jint);

/*
 * Class:     frontend_decoders_FfmpegJniVideoDecoder
 * Method:    initContext
 * Signature: ([BI)J
 */
JNIEXPORT jlong JNICALL Java_frontend_decoders_FfmpegJniVideoDecoder_initContext
  (JNIEnv *, jobject, jbyteArray, jint);

/*
 * Class:     frontend_decoders_FfmpegJniVideoDecoder
 * Method:    freeContext
 * Signature: (JI)V
 */
JNIEXPORT void JNICALL Java_frontend_decoders_FfmpegJniVideoDecoder_freeContext
  (JNIEnv *, jobject, jlong, jint);

#ifdef __cplusplus
}
#endif
#endif
